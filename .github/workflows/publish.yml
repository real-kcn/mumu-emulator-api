name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v1.2.3, etc.
  release:
    types: [published]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    runs-on: ubuntu-20.04
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'  # Use Python 3.8 for better compatibility
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        
    - name: Build package
      run: python -m build
      
    - name: Check package
      run: |
        twine check dist/*
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  test-install:
    needs: build
    strategy:
      matrix:
        include:
          # Ubuntu 20.04 for older Python versions
          - python-version: '3.7'
            os: ubuntu-20.04
          - python-version: '3.8'
            os: ubuntu-20.04
          - python-version: '3.9'
            os: ubuntu-20.04
          - python-version: '3.10'
            os: ubuntu-20.04
          - python-version: '3.11'
            os: ubuntu-20.04
          - python-version: '3.12'
            os: ubuntu-20.04
          # Ubuntu 24.04 for newer Python versions
          - python-version: '3.13'
            os: ubuntu-24.04
          - python-version: '3.14'
            os: ubuntu-24.04
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
        
    - name: Test installation
      run: |
        python -m pip install --upgrade pip
        pip install dist/*.whl
        python -c "from mumu import Mumu, MacAddress, IMEI; print('Import test passed')"

  publish-pypi:
    needs: [build, test-install, publish-testpypi]
    runs-on: ubuntu-20.04
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
        
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}